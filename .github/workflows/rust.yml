name: CI-rust

on:
  push:
    paths: ['**.rs', '**.toml', '**.lock', '**/rust.yml']
  pull_request:
    paths: ['**.rs', '**.toml', '**.lock', '**/rust.yml']

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: check with latest rust
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, beta, nightly]
        sfml_ver: ['2.6.0']
    steps:
      - uses: actions/checkout@v4
      - name: update to ${{ matrix.toolchain }} rust
        run: |
          rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
          rustup component add rustfmt clippy
      - name: build sfml
        if: ${{ matrix.toolchain == 'nightly' }}
        run: |
          sudo apt-get update
          sudo apt-get install \
              libxrandr-dev \
              libxcursor-dev \
              libudev-dev \
              libfreetype-dev \
              libopenal-dev \
              libflac-dev \
              libvorbis-dev \
              libgl1-mesa-dev \
              libegl1-mesa-dev \
              cmake
          cd ~
          curl -LO https://github.com/SFML/SFML/archive/refs/tags/${{ matrix.sfml_ver }}.tar.gz
          tar -xzf ${{ matrix.sfml_ver }}.tar.gz
          mkdir -p build && cd SFML-${{ matrix.sfml_ver }}
          cmake -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DBUILD_SHARED_LIBS=ON \
            -S . \
            -B ../build
          cmake --build ../build
          sudo cmake --install ../build
      - name: build workspace
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cd rusted && cargo b -v
      - name: build workspace
        if: ${{ matrix.toolchain != 'nightly' }}
        run: |
          cd rusted
          cargo b -v -p first_word -p integral -p last_word -p longman -p mask1 -p mcko -p pop -p \
          resheto -p speedometer -p tumba-umba
      - name: fmt and clippy check
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cd rusted && cargo fmt -- --check && cargo clippy -- -D warnings
