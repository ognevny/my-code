name: CI-rust

on:
  push:
    paths: ['**.rs', '**.toml', '**.lock', '**/rust.yml', 'Makefile']
  pull_request:
    paths: ['**.rs', '**.toml', '**.lock', '**/rust.yml', 'Makefile']

env:
  CARGO_TERM_COLOR: always
  RUST_FLAGS: '-C target-cpu=native'

jobs:
  build:
    name: check with latest rust
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v4
      - name: update to ${{ matrix.toolchain }} rust
        run: |
          rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
          rustup component add rustfmt clippy
      - name: build workspace (nightly)
        if: ${{ matrix.toolchain == 'nightly' }}
        run: |
          sudo apt-get update
          sudo apt-get install \
              libxrandr-dev \
              libxcursor-dev \
              libudev-dev \
              libfreetype-dev \
              libopenal-dev \
              libflac-dev \
              libvorbis-dev \
              libgl1-mesa-dev \
              libegl1-mesa-dev \
              cmake \
              mold
          make rust-with-sfml MOLD=1 SFML_SOURCE=1
      - name: build workspace
        if: ${{ matrix.toolchain != 'nightly' }}
        run: |
          sudo apt-get update
          sudo apt-get install mold
          make rust MOLD=1
      - name: fmt and clippy check
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cd rusted && cargo fmt -- --check && mold -run cargo clippy --locked -- -D warnings
      - name: run speedometer
        run: |
          make rust-speedometer PROFILE=speedometer
          time ./rusted/target/speedometer/speedometer
